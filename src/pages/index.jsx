import React from 'react';
import { Form, Card, Loader } from '../components';

const RenderCard = ({ data, title }) => {
  if (data.length > 0) {
    return data.map((post) => {
      return <Card key={post._id} {...post} />;
    });
  }
  return <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>;
};

const Main = () => {
  const [loading, setLoading] = React.useState(false);
  const [allPost, setAllPost] = React.useState([]);
  const [searchText, setSearchText] = React.useState('');
  const [searchedResult, setSearchedResult] = React.useState('');
  const [searchTimeout, setSearchTimeout] = React.useState('');
  
  React.useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch(`${import.meta.env.VITE_REACT_APP_MAIN_API}/v1/post`, {
          method: 'GET',
          headers: {
            'Content-type': 'application/json',
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPost(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);
  function handleSearch(e) {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPost.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResult(searchResult);
      }, 500)
    );
  }
  return (
    <div className="max-w-7xl max-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[16px] maw-x[500px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>
      <div className="mt-16">
        <Form labelName="Search post" type="text" name="text" placeholder="Search post" value={searchText} handleChange={handleSearch} />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing result for <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">{searchText ? <RenderCard data={searchedResult} title="No search results found" /> : <RenderCard data={allPost} title="No post found" />}</div>
          </>
        )}
      </div>
    </div>
  );
};

export default Main;
